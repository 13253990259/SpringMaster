<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd">

	<context:component-scan base-package="com.xgj.aop.spring.advice.innerCallAopSolve" />

	<bean id="naiveWaiter" class="com.xgj.aop.spring.advice.innerCallAopSolve.NaiveWaiter" />

	<bean id="greetingBeforeAdvice" class="com.xgj.aop.spring.advice.innerCallAopSolve.GreetingBeforeAdvice" />
	
	<!--通过Advisor自动创建代理 -->
	<bean id="regexpAdvisor"
		class="org.springframework.aop.support.RegexpMethodPointcutAdvisor"
		p:patterns=".*To.*" 
		p:advice-ref="greetingBeforeAdvice" /> 

	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		p:proxyTargetClass="true" />


</beans>
